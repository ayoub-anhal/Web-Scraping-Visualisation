<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='DASHBangkok' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='all_reviews' inline='true' name='federated.15dy4ji1w9l4ge1drmr9o15jne79' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_reviews' name='semistructpassivestore-direct.0oifxbe0dgch3d19dpqov0xfuppb'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Lenovo/Desktop/Tri' filename='all_reviews.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[all_reviews.json]'>
                  <map key='reviews' value='true' />
                  <map key='reviews.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0oifxbe0dgch3d19dpqov0xfuppb' name='all_reviews.json' table='[all_reviews.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0oifxbe0dgch3d19dpqov0xfuppb' name='all_reviews.json' table='[all_reviews.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[all_reviews.json].[Document Index (generated)]' />
          <map key='[nom Restaurant]' value='[all_reviews.json].[nom Restaurant]' />
          <map key='[nom]' value='[all_reviews.json].[reviews.Value.nom]' />
          <map key='[pays]' value='[all_reviews.json].[reviews.Value.pays]' />
          <map key='[profil_url]' value='[all_reviews.json].[reviews.Value.profil_url]' />
          <map key='[reviews Index (generated)]' value='[all_reviews.json].[reviews.Index (generated)]' />
          <map key='[ville]' value='[all_reviews.json].[reviews.Value.ville]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nom Restaurant</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nom Restaurant]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>nom Restaurant</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reviews Index (generated)]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>reviews.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews.Value.nom</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nom]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>reviews.Value.nom</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews.Value.pays</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pays]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>reviews.Value.pays</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews.Value.profil_url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[profil_url]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>reviews.Value.profil_url</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews.Value.ville</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ville]</local-name>
            <parent-name>[all_reviews.json]</parent-name>
            <remote-alias>reviews.Value.ville</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Restaurant Name' datatype='string' name='[Calculation_529454484255100932]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM(REGEXP_REPLACE([nom Restaurant], &apos;^\d+\.\s*&apos;, &apos;&apos;))' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' datatype-customized='true' hidden='true' is-auto-gen-lod-field='true' name='[Number of Records per all_reviews.json]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='FLOAT(COUNTD([Document Index (generated)]))' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at all_reviews.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per reviews]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([reviews Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at reviews level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_reviews.json' datatype='table' name='[__tableau_internal_object_id__].[all_reviews.json_70505C05308D4579BF2882EED404493D]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[nom Restaurant]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>nom Restaurant</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[nom]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>reviews.Value.nom</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[pays]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>reviews.Value.pays</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profil Url' datatype='string' name='[profil_url]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>reviews.Value.profil_url</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[reviews Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>reviews.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[ville]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>reviews.Value.ville</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[Calculation_529454484255100932]' derivation='None' name='[none:Calculation_529454484255100932:nk]' pivot='key' type='nominal' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='All Reviews' role='dimensions'>
        <folder-item name='[Calculation_529454484255100932]' type='field' />
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[nom Restaurant]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Reviews' role='dimensions'>
        <folder-item name='[nom]' type='field' />
        <folder-item name='[pays]' type='field' />
        <folder-item name='[profil_url]' type='field' />
        <folder-item name='[reviews Index (generated)]' type='field' />
        <folder-item name='[ville]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='All Reviews'>
          <folder-item name='[Calculation_529454484255100932]' type='field' />
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[nom Restaurant]' type='field' />
        </folder>
        <folder name='Reviews'>
          <folder-item name='[nom]' type='field' />
          <folder-item name='[pays]' type='field' />
          <folder-item name='[profil_url]' type='field' />
          <folder-item name='[reviews Index (generated)]' type='field' />
          <folder-item name='[ville]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Lenovo/Desktop/all_reviews.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/03/2025 03:46:33 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[nom Restaurant]' value='[Extract].[nom Restaurant]' />
            <map key='[nom]' value='[Extract].[reviews.Value.nom]' />
            <map key='[pays]' value='[Extract].[reviews.Value.pays]' />
            <map key='[profil_url]' value='[Extract].[reviews.Value.profil_url]' />
            <map key='[reviews Index (generated)]' value='[Extract].[reviews.Index (generated)]' />
            <map key='[ville]' value='[Extract].[reviews.Value.ville]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='all_reviews' increment-value='%null%' refresh-type='create' rows-inserted='22339' timestamp-start='2025-03-03 15:46:32.116' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>all_reviews.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>589</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nom Restaurant</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nom Restaurant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nom Restaurant</remote-alias>
              <ordinal>1</ordinal>
              <family>all_reviews.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>589</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews.Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[reviews Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews.Index (generated)</remote-alias>
              <ordinal>2</ordinal>
              <family>all_reviews.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews.Value.nom</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews.Value.nom</remote-alias>
              <ordinal>3</ordinal>
              <family>all_reviews.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9351</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews.Value.pays</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pays]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews.Value.pays</remote-alias>
              <ordinal>4</ordinal>
              <family>all_reviews.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>146</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews.Value.profil_url</remote-name>
              <remote-type>129</remote-type>
              <local-name>[profil_url]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews.Value.profil_url</remote-alias>
              <ordinal>5</ordinal>
              <family>all_reviews.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9919</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews.Value.ville</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ville]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews.Value.ville</remote-alias>
              <ordinal>6</ordinal>
              <family>all_reviews.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_reviews.json_70505C05308D4579BF2882EED404493D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_529454484255100932:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1897 Lounge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;At-Ta-Rote&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beer Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brasserie 9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Celadon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coco Lima&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Gaucho | Sukhumvit Soi 19&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Giglio Trattoria Fiorentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Holey Bakery Suanplu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Journey of Meats&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Scala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Tian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meat Bar 31&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nami Teppanyaki Steakhouse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paella House &amp; Wine Bar By El Tapeo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prego Bangkok&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rotunda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shishitei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sumi Tei Yakiniku&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Beast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Riddler Japanese Gastronomic Dining &amp; Wine Bar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vinifera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zoom Sky Bar and Restaurant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;25 Degrees Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amaya Food Gallery at Amari Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BanJoo Korean BBQ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bitterman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cantina Italian Kitchen (Ari)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chomsindh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Da Noi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fireplace Grill and Bar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hashiri&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Issaya Siamese Club&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kinu by Takagi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mami Rose - The Goodtime Restaurant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mondo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Octave Rooftop Lounge &amp; Bar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petite Audrey Cafe &amp; Bistro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Restaurant Stage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEEN Restaurant &amp; Bar Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sopa Restaurant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TASTE restaurant - ibis Bangkok Riverside&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;The Living Room&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twenty Seven Bites Brasserie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yamazato&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lebua No.3&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;100 Mahaseth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Appia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Basil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blue Parrot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Casa Mexicana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cielo Sky Bar and Restaurant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dynasty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Front Room&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Here Hai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JAM JAM Eatery &amp; Bar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kura House&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Living Room At Ad Lib Bangkok&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marie Guimar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozza by Cocotte - EmQuartier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OSHA Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pizza Massilia - Ruam Rudee Restaurant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Terrace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shakarich Surawong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spice Market&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tetsu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Melting Clock - Restaurant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vertigo Rooftop Restaurant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yu Ting Yuan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Akira Back Bangkok&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Audrey Cafe Glamour&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benihana at Grand Mercure Bangkok Atrium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunello Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charcoal Tandoor Grill &amp; Mixology&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Conti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elements, Inspired By Ciel Bleu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goji Kitchen + Bar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hummus Boutique Bangkok&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jyak &amp; Lym&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laem Charoen Seafood - Siam Paragon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Louis Leeman Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Methavalai Sorndaeng&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEXT2 Café&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Partner in Crime Ari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Quince - Eatery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saffron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skyline&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sushi Kanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The District Grill Room And Bar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The St. Regis Bar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Volti Tuscan Grill &amp; Bar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ABar Rooftop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Attico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belga Rooftop Bar &amp; Brasserie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chakrabongse Dining&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cocotte Farm Roast &amp; Winery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Gaucho | Thong Lor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ginza Sushi Ichi Bkk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holey Mothership&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JP French Restaurant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Tavola&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Longtail River Bar And Lounge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mei Jiang&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nathong Terrace Bar and Restaurant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pagoda Chinese Restaurant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prelude Restaurant &amp; Bar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ruay Mitr Boiled Rice, Ekkamai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Siam Yacht Club&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Supanniga Eating Room, Sathorn 10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Brasserie at the Waldorf Astoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Roof @38th Bar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vistro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;炭火焼 源 Gen Japanese Charcoal Grill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;168 YĪ LIÙ BĀ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aqua Bar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bawarchi Rooftop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blue Sky Rooftop Bar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COASTIERA | Ristorante Italiano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casa Pasta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebisensei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fruitea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Herringbone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jardin Du Boeuf&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lobby Lounge At Anantara Siam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;L’Oliva Bangkok&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Market Café&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mugendai Penthouse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oskar Bistro Bangkok&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pizza Massilia Sukhumvit 49&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rolling Ribs Brew Bar &amp; BBQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shang Palace Chinese Restaurant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sra Bua By Kiin Kiin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thara Thong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Never Ending Summer Restaurant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vertigo Too&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuutaro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Albricias Restaurant&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bang Bang Burgers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bistro M - Chidlom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calderazzo Cucina Italiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chisana Nami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D&apos;ark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Felicita&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hard Rock Cafe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khum Hom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Le Normandie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maison Bleue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mocha And Muffins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oak Wine Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Penthouse Bar + Grill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Red Sky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seasonal Tastes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somtum Der Tha Tien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taburete&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Kitchen Table&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tsu Japanese Restaurant&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Workshop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;57th Street&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amritsr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banyan Tree Bangkok F&amp;B Department&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bkk Social Club&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cantina Pizzeria &amp; Italian Kitchen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chon Som All Day Dining&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flavors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haven&apos;t Met Rooftop Bar &amp; Bistro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;It&apos;s Happened To Be a Closet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kisso Japanese Restaurant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lerdtip Thonglor by Chef Gigg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Man Ho Bistro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monkey Pod&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olá Thai Tapas Bar And Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phra Nakhon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riedel Wine Bar &amp; Cellar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serina Japanese Restaurant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soraya Japanese Steak &amp; Izakaya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tatsumi Japanese Cuisine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;The Lobby&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Up &amp; Above Restaurant And Bar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yao Restaurant and Rooftop Bar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;di Vino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Al Saray Silom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baan Restaurant Thai Family Recipe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bimbo Mediterranean Restaurant &amp; Bar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe Tartine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chef&apos;s Table&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crostini Rooftop Italian Restaurant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Espresso Restaurant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hanji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indian Essence Art&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Le Dalat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Magpie Bkk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ministry Of Crab - Bangkok&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nowhere&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patummat Restaurant - - The Sukosol Hotel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rangoon Tea House Bangkok&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saneh Jaan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sol and Luna BKK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sushi Zo - Bangkok&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;The Iron Fairies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Toby&apos;s&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weaver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1010 Wine Bar &amp; Restaurant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARROZ - Bangkok - Spanish Restaurant - Paella - Tapas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beast &amp; Butter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bo.Lan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COCA Restaurant - Central World&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Casa Teo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ekkaluck Bangkok&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gianni Ristorante&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HOBS (IconSiam)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jharokha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Bottega di Luca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lobster &amp; Oyster by Chef Marian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MASA - Otaru Masazushi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nahm&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Otto Italian Restaurant @ MUU Bangkok&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Praya Dining At Praya Palazzo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rossano&apos;s Italian Cuisine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shinsen Fish Market&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stella&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Addition&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Pinnacle Haus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Via Vai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuzu Omakase&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aksorn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aunglo by Yangrak&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bianca Italian Restaurant (emsphere)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bull &amp; Bear&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charmgai by Charmgang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cooling Tower Rooftop Bar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Embassy Room La Marina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golden State Vegan Sushi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hybrid Restaurant &amp; Wine Bar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kamui Hokkaido Dining at ICONSIAM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lao Lao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Love Me Tender a la Plancha&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metro on Wireless&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nila&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paste Bangkok&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R-HAAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sala Rim Naam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Smalls&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sushi Kappou Kitaohji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The Emporia Restaurant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The Verandah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W Lounge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Al Dente&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Authors&apos; Lounge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bianca Italian Restaurant (one Bangkok)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cadence By Dan Bark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chatuchak Café&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote by Mauro Colagreco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Err Urban Rustic Thai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gordon Ramsay Bread Street Kitchen &amp; Bar Iconsiam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Igniv Bangkok&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karatama Robatayaki&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latest Recipe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loyrom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexicano Restaurante Autentico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nippon Kai Market&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pastel Rooftop Bar &amp; Mediterranean Dining&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raan Jay Fai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SN Bar &amp; Kitchen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salathip Thai Restaurant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sushi Sora&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The House Of Smooth Curry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The Witch Antiques and Restaurant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W XYZ Bar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bai Yun Chinese Restaurant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Biscotti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cagette Canteen &amp; Deli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chez Papa Bangkok&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cuisine de Garden Bkk (Ekkamai)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fei Ya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indulge Fusion Food &amp; Cocktail Bar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khua Kling Pak Sod - Thonglor Branch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Le Dalat - Emquatier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maillard Butcher &amp; Steak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mizu by Sankyodai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;O’ganic Concept&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peacock Alley at Waldorf Astoria Bangkok&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Red Rose Chinese Restaurant &amp; Jazz Lounge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scarlett Wine Bar &amp; Restaurant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sole Mio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taberna JAMON JAMON - Bangkok - Spanish Tapas Bar - Wine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;The Kitchen at Yenakat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trader Vic&apos;s&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wine Depot Bangkok&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alfresco 64, A Chivas Bar – Tower Club at lebua State Tower&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangkok Trading Post Restaurant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bite Me Softly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CALM Bangkok - Grill, Garden &amp; Guinguette&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Choen Restaurant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D&apos;ark - Iconsiam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finch Bangkok&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haru Ekkamai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kinki Japanese Progressive Dining and Bar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanese house restaurant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mama Dolores&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Momiji Omakase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ocken&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peppina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RedSquare Rooftop Bar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Secret Wonderland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somtum Der, Sala Daeng&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Take Eat Easy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Library&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulum Skybar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yakiniku Tan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;iO Italian Osteria Bangkok&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;About Eatery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Audrey Cafe &amp; Bistro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRITANNICA Brasserie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bella Napoli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chao Phraya Terrace&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colonnade&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Tapeo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ginza Tenharu Bkk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holy Belly Restaurant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jumbo Lobster Riverside Bangkok&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laem Charoen Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lord Jim&apos;s&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mellow Restaurant &amp; Bar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Neil&apos;s Tavern Restaurant &amp; Bake Shoppe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PUBLIC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ruen Noppagao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Signature Bangkok Restaurant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Super Seoul Cafe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The China House&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Siam Tea Room&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VIU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1823 Tea Lounge by Ronnefeldt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Artur Restaurant&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beauty in The Pot - Bangkok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bottoms Up - CentralFestival Eastville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cataleya Estate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coco Chaophraya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Gaucho | Lang Suan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gigi - Dining Hall &amp; Bar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HOBS The Playhouse at Groove Ctw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jhol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Dotta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lola&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Masala Art Bangkok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nam Nam Pasta and Tapas House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oxbo Bangkok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Praya Kitchen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rossini&apos;s&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shintaro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suan Bua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Allium Bangkok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Raw Bar Sukhumvit 26&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VIKARN Bangkok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zest Bar &amp; Terrace&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;71Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anita Private Kitchen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bardo Social Bistro And Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blue Elephant Bangkok Sukhumvit Thai Heritage Cuisine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carmina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chon Thai Restaurant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DID - Dine in the Dark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flow Oasis Pool Lounge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Healthy Tasty Club&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;J&apos;AIME by Jean-Michel Lorain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kissuisen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lily Fu&apos;s&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Man Ho Chinese Restaurant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mono Sei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OPUS Wine Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pimp My Salad Bangkok&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riva Del Fiume&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seven Spoons Bar and Restaurant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spectrum Lounge &amp; Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tep Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;The Londoner Brew Pub&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vecho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;You Know Where&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Al Saray - Soonvijai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Avra Greek &amp; Georgian Restaurant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Big Bite Burger Bar &amp; Grill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe Claire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chef Pom Chinese Cuisine By TODD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crave Restaurant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Escape Bangkok - Emquartier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;In The Mood For Love: Sushi Bar &amp; Bistro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly by Audrey @Central Plaza Ladprao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lava Fire Grill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mad Daddy Pizza House&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Milano Cafe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nourish&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patara Fine Thai Cuisine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rain Tree Café&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Salvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Soi Bangkok&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sushi Yorokobu Bkk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The House on Sathorn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thiptara Thai Restaurant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wang HingHoi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Above Eleven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Audrey Cafe des Fleurs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Benihana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broccoli Revolution&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Char Bangkok&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Contento Italian Restaurant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Toro Steakhouse And Churrascaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Giorgio&apos;s&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;House Of Tango&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JW Café&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laem Charoen Seafood - Central World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lost &amp; Found&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Menya Itto Bangkok&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York Steakhouse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palmier by Guillaume Galliot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Punjab Grill Bangkok&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saawaan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sirimahannop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sushi Cyu - Central World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Dining Room at Grand Hyatt Erawan Bangkok&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Silk Road&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Viva Filipinas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;80/20bkk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aoringo Nihonmura Thonglo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BARSU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blue Elephant Cooking School &amp; Restaurant Bangkok&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carne Bkk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ciao Terrazza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Don Giovanni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Food Hub Icon Chef&apos;s Table Restaurant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena Greek &amp; Mediterranean Restaurant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jaew Jim Thompson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuma No Yakitori Bangkok&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lin-Fa Chinese Restaurant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mango Tree Surawong&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Motherbkk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orchid Café&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pink Bar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;River Cafe and Terrace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shakarich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spice &amp; Barley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terrace Rim Naam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The Lounge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Velabhirom Restaurant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;You&amp;MEE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Morocco&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Document Index (generated)' />
        <field-sort-custom-order field='nom Restaurant' />
        <field-sort-custom-order field='Calculation_529454484255100932' />
        <field-sort-custom-order field='Calculation_529454484254412803' />
        <field-sort-custom-order field='Calculation_529454484254064641' />
        <field-sort-custom-order field='reviews Index (generated)' />
        <field-sort-custom-order field='nom' />
        <field-sort-custom-order field='pays' />
        <field-sort-custom-order field='profil_url' />
        <field-sort-custom-order field='ville' />
        <field-sort-custom-order field='Number of Records per all_reviews.json' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_reviews.json' id='all_reviews.json_70505C05308D4579BF2882EED404493D'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0oifxbe0dgch3d19dpqov0xfuppb' name='all_reviews.json' table='[all_reviews.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Countries Related to Bangkok'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontname='Trebuchet MS' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_reviews' name='federated.15dy4ji1w9l4ge1drmr9o15jne79' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15dy4ji1w9l4ge1drmr9o15jne79'>
            <column caption='Restaurant Name' datatype='string' name='[Calculation_529454484255100932]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(REGEXP_REPLACE([nom Restaurant], &apos;^\d+\.\s*&apos;, &apos;&apos;))' />
            </column>
            <column-instance column='[Calculation_529454484255100932]' derivation='Count' name='[cnt:Calculation_529454484255100932:qk]' pivot='key' type='quantitative' />
            <column datatype='string' hidden='true' name='[nom Restaurant]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nom Restaurant</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pays]' derivation='None' name='[none:pays:nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[pays]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>reviews.Value.pays</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' user:ui-pattern-exclude='true'>
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cook Islands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;NULL&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;South Pole&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;São Tomé and Príncipe&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Vatican City&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pays:nk]' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;NULL&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' scope='cols' value='Population Visiting Restaurants' />
            <format attr='auto-subtitle' class='0' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' scope='cols' value='true' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-orientation' value='0' />
            <format attr='text-format' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' value='*# ###' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' num-steps='50' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#000000</color>
                <color>#242424</color>
                <color>#484848</color>
                <color>#6c6c6c</color>
                <color>#909090</color>
                <color>#b4b4b4</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#1b1b1b' />
                <format attr='font-family' value='Tableau Bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.5602209568023682' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</rows>
        <cols>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]</cols>
      </table>
      <simple-id uuid='{211B452C-E717-4CAB-A84B-10B3B0C848F9}' />
    </worksheet>
    <worksheet name='Global Visitors to Bangkok'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Semibold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_reviews' name='federated.15dy4ji1w9l4ge1drmr9o15jne79' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15dy4ji1w9l4ge1drmr9o15jne79'>
            <column caption='Restaurant Name' datatype='string' name='[Calculation_529454484255100932]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(REGEXP_REPLACE([nom Restaurant], &apos;^\d+\.\s*&apos;, &apos;&apos;))' />
            </column>
            <column-instance column='[Calculation_529454484255100932]' derivation='Count' name='[cnt:Calculation_529454484255100932:qk]' pivot='key' type='quantitative' />
            <column datatype='string' hidden='true' name='[nom Restaurant]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nom Restaurant</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pays]' derivation='None' name='[none:pays:nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[pays]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>reviews.Value.pays</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' user:ui-pattern-exclude='true'>
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cook Islands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Jersey&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;NULL&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Palestinian Territories&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;South Pole&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;São Tomé and Príncipe&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Vatican City&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:pays:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[Longitude (generated)]' field-type='quantitative' max='30472768.772473641' min='-159911.88007872179' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[Latitude (generated)]' field-type='quantitative' max='13451454.498824511' min='-11034200.699139604' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-orientation' value='0' />
            <format attr='text-format' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' value='*# ###' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' max='5500' num-steps='50' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#000000</color>
                <color>#242424</color>
                <color>#484848</color>
                <color>#6c6c6c</color>
                <color>#909090</color>
                <color>#b4b4b4</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' />
              <color column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' />
              <geometry column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#1b1b1b' />
                <format attr='font-family' value='Tableau Bold' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[Latitude (generated)]</rows>
        <cols>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EA88BB8C-413E-42B9-94F5-6F30CB47DA28}' />
    </worksheet>
    <worksheet name='Top 5 Cities Related to Bangkok'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontname='Trebuchet MS' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_reviews' name='federated.15dy4ji1w9l4ge1drmr9o15jne79' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15dy4ji1w9l4ge1drmr9o15jne79'>
            <column caption='Restaurant Name' datatype='string' name='[Calculation_529454484255100932]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(REGEXP_REPLACE([nom Restaurant], &apos;^\d+\.\s*&apos;, &apos;&apos;))' />
            </column>
            <column-instance column='[Calculation_529454484255100932]' derivation='Count' name='[cnt:Calculation_529454484255100932:qk]' pivot='key' type='quantitative' />
            <column datatype='string' hidden='true' name='[nom Restaurant]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>nom Restaurant</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pays]' derivation='None' name='[none:pays:nk]' pivot='key' type='nominal' />
            <column-instance column='[ville]' derivation='None' name='[none:ville:nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[pays]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>reviews.Value.pays</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='City' datatype='string' name='[ville]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>reviews.Value.ville</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Calculation_529454484255100932])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:pays:nk]' />
                  <groupfilter function='member' level='[none:pays:nk]' member='&quot;NULL&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([pays])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:ville:nk]' />
                  <groupfilter function='member' level='[none:ville:nk]' member='&quot;Thailand&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Bangkok&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Phuket&quot;</bucket>
              <bucket>&quot;Ko Kret&quot;</bucket>
              <bucket>&quot;Pattaya&quot;</bucket>
              <bucket>&quot;Chiang Mai&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Shanghai&quot;</bucket>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
              <bucket>&quot;London&quot;</bucket>
              <bucket>&quot;New York City&quot;</bucket>
              <bucket>&quot;Los Angeles&quot;</bucket>
              <bucket>&quot;Sydney&quot;</bucket>
              <bucket>&quot;Melbourne&quot;</bucket>
              <bucket>&quot;Perth&quot;</bucket>
              <bucket>&quot;Paris&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' direction='DESC' measure-to-sort-by='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</column>
            <column>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' scope='cols' value='Population Visiting Restaurants' />
            <format attr='auto-subtitle' class='0' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' scope='cols' value='true' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-orientation' value='0' />
            <format attr='text-format' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' value='*# ###' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' value='#ffffff' />
            <format attr='width' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' value='120' />
            <format attr='width' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk]' value='120' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' num-steps='50' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#000000</color>
                <color>#242424</color>
                <color>#484848</color>
                <color>#6c6c6c</color>
                <color>#909090</color>
                <color>#b4b4b4</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='band-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#1b1b1b' />
                <format attr='font-family' value='Tableau Bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.5602209568023682' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk] / [federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk])</rows>
        <cols>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]</cols>
      </table>
      <simple-id uuid='{5F586DD4-D887-493C-8585-24CEC9AD62D0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all_reviews' name='federated.15dy4ji1w9l4ge1drmr9o15jne79' />
      </datasources>
      <datasource-dependencies datasource='federated.15dy4ji1w9l4ge1drmr9o15jne79'>
        <column-instance column='[pays]' derivation='None' name='[none:pays:nk]' pivot='key' type='nominal' />
        <column caption='Country' datatype='string' name='[pays]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <desc>
            <formatted-text>
              <run>reviews.Value.pays</run>
            </formatted-text>
          </desc>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='8448' id='15' type-v2='text' w='49517' x='483' y='940'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Semibold' fontsize='14'>DASH BANGKOK RESTAURANT TRAFFIC INSIGHTS</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='49517' x='50000' y='940'>
            <zone h='98120' id='22' name='Global Visitors to Bangkok' show-title='false' w='49517' x='50000' y='940'>
              <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='10105' id='21' param='horz' type-v2='layout-flow' w='49517' x='483' y='9388'>
            <zone h='7756' id='23' mode='checkdropdown' name='Global Visitors to Bangkok' param='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' type-v2='filter' w='49517' x='483' y='9388'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49132' id='25' param='vert' type-v2='layout-flow' w='49517' x='483' y='49928'>
            <zone fixed-size='424' h='49132' id='27' is-fixed='true' name='Countries Related to Bangkok' w='49517' x='483' y='49928'>
              <layout-cache type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='30435' id='28' name='Top 5 Cities Related to Bangkok' w='49517' x='483' y='19493'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98316' id='29' param='vert' type-v2='layout-flow' w='95734' x='2133' y='842'>
                <zone forceUpdate='true' h='7474' id='15' type-v2='text' w='95734' x='2133' y='842'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Semibold' fontsize='14'>DASH BANGKOK RESTAURANT TRAFFIC INSIGHTS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6421' id='23' mode='checkdropdown' name='Global Visitors to Bangkok' param='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' type-v2='filter' w='95734' x='2133' y='8316'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30316' id='22' is-fixed='true' name='Global Visitors to Bangkok' w='95734' x='2133' y='14737'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='218' h='23789' id='28' is-fixed='true' name='Top 5 Cities Related to Bangkok' w='95734' x='2133' y='45053'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30316' id='27' is-fixed='true' name='Countries Related to Bangkok' w='95734' x='2133' y='68842'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0431A095-B93A-4B50-856A-DA51E1CDBA0B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Countries Related to Bangkok'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:pays:qk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:Calculation_529454484255100932:nk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFA981F6-F635-4BAC-8666-AF294ED059CA}' />
    </window>
    <window class='worksheet' name='Top 5 Cities Related to Bangkok'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:pays:qk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:Calculation_529454484255100932:nk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C0FF279-3F9D-483A-A88D-5C30DCD49796}' />
    </window>
    <window class='worksheet' name='Global Visitors to Bangkok'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[cnt:Calculation_529454484255100932:qk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:pays:nk]</field>
            <field>[federated.15dy4ji1w9l4ge1drmr9o15jne79].[none:ville:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E57AF475-5EB5-4B47-994E-9DF83910D7F6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Countries Related to Bangkok' />
        <viewpoint name='Global Visitors to Bangkok'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Top 5 Cities Related to Bangkok' />
      </viewpoints>
      <active id='27' />
      <simple-id uuid='{858FE43F-F4F3-443D-9A46-0B600C33A9EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries Related to Bangkok' width='192'>
      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
      Vmy4heRkO7JIgIiwPF/qSZaXhU6w3+9ftm+CP6i2tvaMJtCXv/xltm+XnvdLPpqYPwW6XOPj
      42e8+a2oqCAjIyOGEUni2UIjWS5f2tZQf2crnqiGlaUrkAEDXX1kFeWjAKZnpkmyJZ1z7E9N
      Tc0ZSfHPPvssjzzyCKODPUzO+shIT2JsYpqylZVcoC8tkQAx7CXW7NuHQqNl3jXLtMOFLiwy
      4xqju2OStJI0DJ09GExKBsbncc450MiV7PzEJ857PLdrjud/9SLlhXb2t0zy9P/9NzRKaTyo
      5MJieo1UKuDEsWNojElkJyXR2z+E6I8w6ZzB5woyNu5nMqAnzWbCIEZxXGCRvFSbjsptt1Oe
      EqWt63Wm5gNYtAlLWBpJPIpZBbjljjvwCipy0hIZHJ8lzW5juLuJ37/byBOfuQeNEGLWHcBo
      MKJUypGLoNZrkMvlqNV/WSfgz003lSGVB+4uQfA6+UpOBbnJ0pdfcnFn5APEA5lM9pcRoBLJ
      FVr4Ji3nBTLCfjdRtRGNAl555ZUzVorv6ekhPT09htFJ4tmSX0pDcwP85PkacldksaoglYDC
      SNg1iaAxIw858QVFVDozVnUEr8yAWphjpv80yoKdlGTbEQQBv9+/cDxRFBGjEYOGTykAAA66
      SURBVH75zL/ROOBjbb6GXreJ7/zDl5e6aJI4tPRtCVGgoHQ1IXcfb75zkuS0YuSCiMEyjssd
      RJugJ+yfIDVRy+m+MVSKEDvKM3h+bw1r/vbT5zykTK7klhs3YSnRkhwdp/t47xIXShKvlrwC
      KLRWwvPtFK5czYrsNEJqMzqFHJVGRjAkoFKpCQfDeJ2TVFVVYjJqsRlVfNIYZc57/gUyZvwa
      7rypirdebGHjxg1LWCJJPDtjfYDl2gf4oMnJSVpbWxc+79q1a9lM7S6JP8tufYCLGRsb4ze/
      +c3C582bN8dN7JLlJ2aT47qmRzjW0MaqNRtJturgT7P4hMMRtBoV7cdqMZZVkqRVolQpiIQj
      aLVafvOb35wxFGJkZIT0tBR++cyPmFekcPvWItzKVNaV5sSiWJI4E7MH6n6vh3mPl+GWg+xx
      hElwz+EVBDq6uympWIPO58ff00FHWxephUVkK5Rsvv/8neBPf/pTPP92I9NjfYxFZVIFkFyS
      mFUAlUaLUQ3YsogOtSMoRNZVlGPLyMWiEZgZlWFNs5KclkdICFBpT0F+gaE9R48c555776b6
      pX/n5NAEn7x9g5QOI7mouFsfoK6u7ox8gKeeegqr1RrDiCTxbOEiGS9PgZKSkrjjjjsAMBqN
      0pdfckUWKoAoile9AkQjIerrGyirWof+g4Pzw36m3AIzo/2UVVQAMDU9jRgVSE5JveCktocO
      HVpYH6C0tJS2tjYQRfq721BbMtBG3XhFHdlptqtaFsm1aVGbycPtdYy6FdgHO9nb3kOa3Y7a
      bmeuuYEjk5CjcXGqp58H772Ll3/9EwpW34z+VANBhRn/1AApmTlMzjooW7mKUw1N7PrEx895
      Hu9UF0987f/jsa//A8MN72LM3cYXHr59MYsmuUYsagWwpBWSNHmMt/d0UFaZS1//IArHLFal
      kYxkLXoUCPIQAEazhaDXRSgQICwGkaNF4ZuiZ3AaIRKmtf40az926znPI1coKa1Yxalj1YjB
      ABN9/efcTiL5sEVNio+EAoxNzJCekcb05CT2ZDszs7OYTVbc804S9AZkMjDoDXi8XohGEaNh
      BJkGlRwSEtSMjU9hs5qZm/dhT0nirTfe4Ctf+QoARUVF1NbWgijimJlCa0pEqwSvP4zRoLuq
      ZZFcm+IyH+DPSTCy86wZIJFcqoVMeJVKtaz/8wd8yBVKfvvb36JQKFAoFHzta1+L5d9Ocg1Y
      Nu+K3nzlTYorcvFFNCh9TlRGMyNjU6yuKKL5dC8CPjZs3HHOfXubavjuf77E/ffcwXv7DnDf
      57/OlvLsJS6BJB7FfGa4PwuHw0xOjDMyPMTxk6dRRv30tDby6xf/wOBgOyNz52+i9Xa0YbHo
      +ePuw+zYtZXBgfEljFwSz5bNHaCiqgJEH2q/nOKcbAw6GUXlq8nLz6Knd5DM3Bw0qnPX1+13
      PsB0eDc37bqJmv2HueOe1UscvSRenTEzXDy8CZ6enqajowOAjIwMCgsLYxyRJJ7FfH2Ay3X6
      9GmefvppAF566aUYRyOJdzFtAgkhDy+//h4P3nMHAnJEEbzueeaGOwjZV5JtluFyzKCzpRMJ
      +km0WhgZGeH1119/f3/h/TXDuhsPUzfoQ+vqIWwp4jN33xzLYkniSEwrwFBHE/45B4cP7kFh
      ymJqdprulnaqsnQoZKns/e0brF+Vg2o+zKu/foEvf/vJs44hBN388vlXCBusmEMOIokAUgWQ
      XJqYVoDRGQ8rinLwOh14nH0k56ygomgec3IyLp+bVWvXk2qT0zExzuqqqnMPkpOruO+BT1F3
      qgOlW0XIkrTUxZDEsbhbH6CpqYmXX34ZgO9///tnTJMokVyuM5Li46ECpKamsnbtWux2u/Tl
      l1yxhQfrfx5jc7X+c4wPMDXnZWZm+py/d02PsPe995hy+c/4eVdHJ8I5th/u78UTjlJbW8sj
      jzzCd77znYVCDPW0MjI5w/EjB5l0emLxd5TEqUXrA3SerqPbYyYtIUIkFESr04PGiN8fItFq
      YsvGdQTdRxntOc2h/mEq166m6WQ9Kp2ZBKOa2tpG9AlqfPN+MnLSaGpq475HHzvrPEH3FC/+
      8qekrbkVcaaTptEAX3zgY4tVLMk1ZvGGQsjVrEjW0TMxS93RI/hkJtqO1eBx9iPTZdB1sprp
      iJ7R3na6BvpoqD1OY+NxPCFoPl7LyaZGZlxBcm0mugYnsFnN5zzNzNgwnmCYztYG3njvGPnZ
      qYtWJMm1Z9GS4kPBAAqlCn8gAEIYmSoBhDAKhQylRkck4MXl9mIym/F6vBj0CQRCYTQaLTIx
      QiAkoFGrUcpliIh4fEHMFhNvvv46X/3qV1m7di2vvfYa8H7qpT8Yxu/zodEZMOqltQEkl2ah
      AoRCoVjHckkEQSASiaBQKNDppKQXyZVZ6AMIgrAsngI5HQ7MiYlntc3mXXNoDSZee+X3PPbY
      Y2zevJmjR4/GJEbJtSPmo0Ff/sVPEKJQtnUnrlkHAa+blasK6e4Zx27RMj3robAgnbffruau
      z37urP2jQpCn/unrZG6+j6P73uZ//u/vYTdqYlASSTyKeT6AKIqY03Pp7upAh5PBWR+jQyO0
      NB2j4XQPupCXPYdbWFlScM79B1uO0DE6T9/QBJXFecy5pMegkksX8zvApptuIbeggNnxIToG
      p7n1hhSioXnWbrwBe6INq1ZFSiTIwMgsRrXirP3zVu/kmf8op2/CScOJE4yPj1GYKc0JJLk0
      C53geBkOPTc3x/DwMAaDgdLS0liHI4lzC3cAjSY+2s1tbW1897vf5Qc/+EGsQ5FcAxa1CXTq
      5FEmPbBtcxWOOS9GfQIKmZyGE0dIz8+h7kgXt965A6tJz2u/eY6Nt93DH577CR/75CMkJ4SZ
      9igwa0V0RiOzTjdZGalMTEywd+9enE4nAPveeInG0RBrMjU0Dc3zxONfQBPzhp0kXixqJzgq
      CLhcLt57dy8NR2v4+UuvcWLfIbrGxwlFo3jcLva88w7RwAyTMzMcrTsNWi1H3votM3MOGg4e
      4kh9J+ODPfz86WcY8579rsJqS2R8dJQ5j5vJqWkif0qSkUguxaJeKzUJCUQDM6TkpTA8NsOq
      PAvjoy6qqkqYc/ooKS8D0cNYbz/5a7YRdLspL69AFYH87EwmxwPMOCYZHg+xalUlynMkBAz0
      9ZKanIzBoMdmi6JQSBNlSS5d3K0P0NzczMsvv8wXvvAF8vLyYh2OJM4t3AHiJSFGqVSSmZkZ
      N512yfIW8xdhf3bs0D5OtrRzrio4Mz5Ba3c7/rDAiRMneOKJJ+ju7gag69RJDh5vJhr2cuDA
      MaQegORyLJvnJcdPnsRozWa0s4kVZRUM97Rjyl1J6+F9pBVWotGFyco8ew6gzlMneaVuFN9w
      EXtqe9l84yYU0oS5kku0bO4ASpWGSNBPQFSRZRaorW+hq6sbj5hANOA5550BICpXYZILOLw+
      Jgf6mPPFx6hWyfKwbJLi/T4vMoUKpUKOQiEnGAgiVygIh8Oo1BrkchkKuZw9e/bw5JNP8txz
      z7F+/XpCwQCiTIFGrSIcDqNUqS64xJJE8kELFSASicQ6lksik8lQKM4eEySRfBRx9xhUIrma
      lk0fQCKJBakCSK5ry+Yx6OWoefctBsbnuPczn8F0jhyBj+K3L/2KrILVOEc7mPXKsFtUjM/6
      eejhB9Eoruw6MTpwmqMnR0izCPQOz5Kdncro2CQpyclMT4+zeud9lKYbP/oJwl5++rNf8eBn
      HuDFV95i541bqT14GGtqOl7HNCprKvfd+dHnS41GQhw+WM24ww/+eZQmO/LAHEGlET1e5sJq
      Hvr0J7mS/xP9nS3srz5E6ooiIhEFGSYZHQPD2GzpzDomKFm3k7VF6R/5+M7JYWpqDmAwJTPh
      mMGemML07ER83gEmHUFWplmY8V6thf1E0pOT6e/rwxVQkKqVM+QWyDbpmBeiV3z0jNwcFBGB
      yVkfa7KMnOx0snFVAQdPdHPbjtW0905e2QlUenJSEomgINNuov/0CTRpVXjHe1Em5RHxzV/R
      4WVyOR7XPCvL81Hqs5C5pwgprWiFEPOCCrMcgldWAuSigCmzmIJ0G4HZMRpOjXDTjWvZV13P
      TTdton/wylb9MZgsyMQoQz29bL11B/XvHqZi09b4vANsXl9K+7CDKvPVGg4hYjRayDboSEoI
      M+WTc4tZQf90gCTVld9hetu7CCvCrK4oo3fMwefuzqChtZ+vf+Fujhw/za23nXv940sV9jpx
      R2BgdByj3kRqwUam+1qw3fQJ3OPdaHOrruj4QiRAWJQTEXVkpzpQWW4A7yQhdQ5G0YMjrOFK
      5+eYcc5h0clQak2Yk9PYtrOQ+sZWvvGPj1J7rJ6dN+66ouPPOWfRJ6azdmspTUfr+fy3vkLz
      iTrpKZDk+haXTSCJ5GqRKoDkuiZVAMnSiAqcrD1M7/D5O/yHDtYs/Ht0ZISZgdM090yctd3w
      0AChoI/2hqPUtfYD0HH8GB29/cx5g+yt3nfWPt65aQ7UHGL+Q2PFpD6AZGmE/Tz2148RVaew
      tSIVIXEF4lgH89p0SvKSkRGlq72NlfkptI4Hqat+i/seeBCtMZmjB/dzx+07eeOtd/nEZ/8W
      16n3UJitzLoF9Dot1fuPcduOLbQ2HMRlqWJNTgKDp49SsOEOmg7vZeW2u6gwTvG/fvYWq9du
      ITjRzZobbuK93dXSHUCydHRGC//t7/+WoaEpBvs6GR6dYmp8mNqad6k+Wg+InKyr42hzF5tW
      r0IVcdNY3whKGadaTlO1ppLTPUNs27aenz6/h7VFNoZGp2hvPk57Ry+FFZUkJVoZHBpAFARO
      1+7DEQrT0zEIgBiFNJuGA8ca6O7ro7O1XroDSJaIGMXpmsdqseByTBNVqvn1z37FQ59/DEJe
      onI1KoUMIRxEkKvRKaMEIpCgMzA3O4M9yUooEkWQKbDoNYxNzJCcaMQTCDM3N4/NYkKlUeNw
      uknQqiAaIRyc59v/+C1ueui/88mbygmJSgJ+H2G/B63RzPycS6oAkuvb/w9qp764oc6PbgAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Visitors to Bangkok' width='192'>
      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
      optiM/4fnJhjyFTft7EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='181' name='Top 5 Cities Related to Bangkok' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
